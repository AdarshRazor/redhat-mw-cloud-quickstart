{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine."
      }
    },
    "adminPasswordOrKey": {
          "type": "securestring",
          "metadata": {
            "description": "SSH Key or password for the Virtual Machine."
          }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "jbossEapUserName": {
      "type": "string",
      "metadata": {
        "description": "User name for the JBoss EAP Manager"
      }
    },
    "jbossEapPassword": {
      "type": "securestring",
      "minLength": 10,
      "metadata": {
        "description": "Password for the JBoss EAP Manager"
      }
    },
    "rhsmUserName": {
      "type": "string",
      "metadata": {
        "description": "User name for Red Hat subscription manager"
      }
    },
    "rhsmPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for Red Hat subscription manager"
      }
    },
    "rhsmPool": {
      "type": "string",
      "metadata": {
       "description": "Red Hat Subscription Manager Pool"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
       "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
     },
     "defaultValue": "https://raw.githubusercontent.com/SpektraSystems/redhat-mw-cloud-quickstart/suraj-rhel77/jboss-eap-rhel8-vmm/"
    },
    "_artifactsLocationSasToken": {
     "type": "securestring",
     "metadata": {
       "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
     },
     "defaultValue": ""
    },  
    "jbosseapstrgType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "vmssName": {
      "type": "string",
      "metadata": {
        "description": "String used as a base for naming resources (9 characters or less). A hash is prepended to this string for some resources, and resource-specific information is appended."
      },
      "maxLength": 9
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (100 or less)."
      },
      "maxValue": 100
    },
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "allowedValues": [
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_D2_v3",
        "Standard_D4_v3",
        "Standard_D8_v3",
        "Standard_D16_v3",
        "Standard_D32_v3",
        "Standard_D48_v3",
        "Standard_D64_v3",
        "Standard_D2S_v3",
        "Standard_D4S_v3",
        "Standard_D8S_v3",
        "Standard_D16S_v3",
        "Standard_D32S_v3",
        "Standard_D48S_v3",
        "Standard_D64S_v3",
        "Standard_F1",
        "Standard_F2",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine scale set"
      }
    }
  },
  "variables": {
    "scriptFileName": "deployjbosseap.sh",
    "containerName": "azureping",
    "singlequote": "'",
    "scriptStart": "su -c'sh ",
    "customScriptCommand": "[concat(variables('scriptStart'), variables('scriptFileName'), ' ')]",
    "scriptClose": "'",
    "loadBalancersName": "jbosseap-lb",
    "imagePublisher": "RedHat",
    "imageOffer": "RHEL",
    "imageSku": "8",
    "nicName": "[concat(parameters('vmssName'), 'nic')]",
    "addressPrefix": "10.3.0.0/16",
    "subnetName": "eap-server-subnet",
    "subnetPrefix": "10.3.2.0/24",
    "publicIPAddresslb": "[concat('pip',uniqueString(resourceGroup().id))]",
    "publicIPAddresslbDNSName" : "[concat('piplb-', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Dynamic",
    "virtualNetworkName": "jbosseap-vnet",
    "backendPoolName": "jbosseap-servers",
    "natPoolName1": "natpool1",
    "natPoolName2": "natpool2",
    "natStartPort1": 50000,
    "natEndPort1": 50120,
    "natBackendPort": 22,
    "natStartPort2": 9000,
    "natEndPort2": 9120,
    "adminBackendPort": 9990,
    "frontendName" : "LoadBalancerFrontEnd",
    "healthProbe" : "eap-lb-health",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "jbosseapstrgName": "[concat('jbosstrg', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddresslb')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
        "domainNameLabel": "[concat(variables('publicIPAddresslbDNSName'))]"
      }
      }
    },
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('vmssName')]",
      "location": "[parameters('location')]",
      "apiVersion": "2017-03-30",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancersName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('jbosseapstrgName'))]"
      ],
      "sku": {
        "name": "[parameters('vmSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": "true",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadWrite"
            },
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[variables('imageSku')]",
              "version": "latest"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('vmssName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPasswordOrKey')]",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancersName'), variables('backendPoolName'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', variables('loadBalancersName'), variables('natPoolName1'))]"
                          },
                          {
                            "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', variables('loadBalancersName'), variables('natPoolName2'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "jbosseap-extension",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "[concat(parameters('_artifactsLocation'),'scripts/', variables('scriptFileName'), parameters('_artifactsLocationSasToken'))]"
                    ]
                  },
                  "protectedSettings": {
                    "commandToExecute": "[concat(variables('customScriptCommand'), parameters('adminUsername'),' ', parameters('jbossEapUserName'),' ', variables('singlequote'), parameters('jbossEapPassword'), variables('singlequote'),' ', parameters('rhsmUserName'),' ', variables('singlequote'), parameters('rhsmPassword'), variables('singlequote'),' ', parameters('rhsmPool'),' ', variables('jbosseapstrgName'),' ', variables('containerName'),' ',base64(listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('jbosseapstrgName')), '2019-04-01').keys[0].value), variables('scriptClose'))]"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2018-06-01",
      "name": "[variables('loadBalancersName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresslb'))]"
      ],
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('frontendName')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresslb'))]"
              },
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('backendPoolName')]"
          }
        ],
        "inboundNatPools": [
          {
            "name": "[variables('natPoolName1')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadBalancersName'), variables('frontendName'))]"
              },
              "protocol": "Tcp",
              "frontendPortRangeStart": "[variables('natStartPort1')]",
              "frontendPortRangeEnd": "[variables('natEndPort1')]",
              "backendPort": "[variables('natBackendPort')]"
            }
          },
          {
            "name": "[variables('natPoolName2')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadBalancersName'), variables('frontendName'))]"
              },
              "protocol": "Tcp",
              "frontendPortRangeStart": "[variables('natStartPort2')]",
              "frontendPortRangeEnd": "[variables('natEndPort2')]",
              "backendPort": "[variables('adminBackendPort')]"
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[concat(variables('loadBalancersName'), '-rule')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadBalancersName'), variables('frontendName'))]"
              },
              "frontendPort": 80,
              "backendPort": 8080,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "protocol": "Tcp",
              "enableTcpReset": false,
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancersName'), variables('backendPoolName'))]"
              },
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancersName'), variables('healthProbe'))]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('healthProbe')]",
            "properties": {
              "protocol": "Tcp",
              "port": 8080,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "name": "[variables('jbosseapstrgName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('location')]",
      "apiVersion": "2019-04-01",
      "sku": {
        "name": "[parameters('jbosseapstrgType')]"
      },
      "tags": {
        "displayName": "jbosseapstrg"
      },
      "kind": "Storage",
      "resources": [
        {
          "name": "[concat('default/', variables('containerName'))]",
          "type": "blobServices/containers",
          "apiVersion": "2018-07-01",
          "dependsOn": [
            "[variables('jbosseapstrgName')]"
          ]
        }
      ]
    }
  ],
  "outputs": {
      "AppUI-LB": {
        "type": "string",
        "value": "[concat('http://', reference(variables('publicIPAddresslb')).dnsSettings.fqdn, '/eap-session-replication/')]"
      }
    }
}
