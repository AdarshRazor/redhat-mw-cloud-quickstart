{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Linux VM user account name"
      }
    },
    "authenticationType": {	
      "type": "string",	
      "defaultValue": "password",	
      "allowedValues": [	
        "password",		
        "sshPublicKey"	
      ],	
      "metadata": {	
        "description": "Type of authentication to use on the Virtual Machine"	
      }	
    },
    "adminPasswordOrSSHKey": {	
      "type": "securestring",	
      "metadata": {	
        "description": "Password or SSH key for the Virtual Machine"	
      }	
    },
    "jbossEAPUserName": {
      "type": "string",
      "metadata": {
        "description": "User name for JBoss EAP Manager"
      }
    },
    "jbossEAPPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for JBoss EAP Manager"
      }
    },
    "rhelOSLicenseType": {	
      "type": "string",	
      "defaultValue": "PAYG",	
      "allowedValues": [	
        "PAYG",		
        "BYOS"
      ],	
      "metadata": {	
        "description": "Select the of RHEL OS License Type for deploying your Virtual Machine. Please read through the guide and make sure you follow the steps mentioned under section 'Licenses, Subscriptions and Costs' if you are selecting BYOS"	
      }	
    },
    "rhsmUserName": {
      "type": "string",
      "metadata": {
        "description": "User name for Red Hat subscription Manager"
      }
    },
    "rhsmPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for Red Hat subscription  Manager"
      }
    },
    "rhsmPoolEAP": {
      "type": "string",
      "metadata": {
        "description": "Red Hat Subscription Manager Pool ID (Should have EAP entitlement)"
      }
    },
    "rhsmPoolRHEL": {
      "type": "string",
      "metadata": {
        "description": "Red Hat Subscription Manager Pool ID (Should have RHEL entitlement). Mandartory if you select the BYOS RHEL OS License Type"
      },
      "defaultValue": ""
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated"
      },
      "defaultValue": "https://raw.githubusercontent.com/SpektraSystems/redhat-mw-cloud-quickstart/master/jboss-eap-standalone-rhel8/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated"
      },
      "defaultValue": ""
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_F1",
      "allowedValues": [
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_D2_v3",
        "Standard_D4_v3",
        "Standard_D8_v3",
        "Standard_D16_v3",
        "Standard_D32_v3",
        "Standard_D48_v3",
        "Standard_D64_v3",
        "Standard_D2S_v3",
        "Standard_D4S_v3",
        "Standard_D8S_v3",
        "Standard_D16S_v3",
        "Standard_D32S_v3",
        "Standard_D48S_v3",
        "Standard_D64S_v3",
        "Standard_F1",
        "Standard_F2",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine"
      }
    }
  },
  "variables": {
    "singlequote": "'",
    "imagePublisher": "redhat",
    "imageOfferPAYG": "rhel",
    "imageSkuPAYG": "8",
    "imageOfferBYOS": "rhel-byos",
    "imageSkuBYOS": "rhel-lvm8",
    "nicName": "[concat(uniquestring(resourceGroup().id), '-nic')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "jbosseap-server-subnet",
    "subnetPrefix": "10.0.0.0/24",
    "publicIPAddressName": "jbosseap-server-pip",
    "publicIPAddressType": "Dynamic",
    "publicIPAddressDNSName" : "[concat('jbosseap-server-pip-', uniqueString(resourceGroup().id))]",
    "vmNamePAYG": "jbosseap-payg-server",
    "vmNameBYOS": "jbosseap-byos-server",
    "virtualNetworkName": "jbosseap-vnet",
    "networkSecurityGroupName": "jbosseap-nsg",
    "ScriptFolder": "scripts",
    "ScriptFileName": "jbosseap-setup-redhat.sh",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "linuxConfiguration": {	
      "disablePasswordAuthentication": true,	
      "ssh": {	
        "publicKeys": [	
          {	
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",	
            "keyData": "[parameters('adminPasswordOrSSHKey')]"	
          }	
        ]	
      }	
    }
  },
  "resources": [
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('publicIPAddressDNSName')]"
        }
      }
    },
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "default-allow-eap-admin",
            "properties": {
              "description": "Allow EAP/ADMIN",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9990",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1020,
              "direction": "Inbound"
            }
          },
          {
            "name": "default-allow-eap",
            "properties": {
              "description": "Allow WEB/EAP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1010,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "condition": "[equals(parameters('rhelOSLicenseType'),'PAYG')]",
      "apiVersion":  "2019-12-01", 
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmNamePAYG')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmNamePAYG')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrSSHKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOfferPAYG')]",
            "sku": "[variables('imageSkuPAYG')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmNamePAYG'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "condition": "[equals(parameters('rhelOSLicenseType'),'PAYG')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNamePAYG'),'/jbosseap-setup-extension')]",
      "apiVersion": "2019-12-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmNamePAYG'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(parameters('_artifactsLocation'), variables('ScriptFolder'), '/', variables('ScriptFileName'), parameters('_artifactsLocationSasToken'))]"
          ],
          "commandToExecute": "[concat('sh jbosseap-setup-redhat.sh',' ',parameters('adminUsername'),' ',parameters('jbossEAPUserName'),' ',variables('singlequote'),parameters('jbossEAPPassword'),variables('singlequote'),' ',parameters('rhsmUserName'),' ',variables('singlequote'),parameters('rhsmPassword'),variables('singlequote'),' ',parameters('rhelOSLicenseType'),' ', parameters('rhsmPoolEAP'))]"
        }
      }
    },
    {
      "condition": "[equals(parameters('rhelOSLicenseType'),'BYOS')]",
      "apiVersion":  "2019-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmNameBYOS')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "plan": {
        "name": "rhel-lvm8",
        "publisher": "redhat",
        "product": "rhel-byos"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmNameBYOS')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrSSHKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOfferBYOS')]",
            "sku": "[variables('imageSkuBYOS')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmNameBYOS'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "condition": "[equals(parameters('rhelOSLicenseType'),'BYOS')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNameBYOS'),'/jbosseap-setup-extension')]",
      "apiVersion": "2019-12-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmNameBYOS'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(parameters('_artifactsLocation'), variables('ScriptFolder'), '/', variables('ScriptFileName'), parameters('_artifactsLocationSasToken'))]"
          ],
          "commandToExecute": "[concat('sh jbosseap-setup-redhat.sh',' ',parameters('adminUsername'),' ',parameters('jbossEAPUserName'),' ',variables('singlequote'),parameters('jbossEAPPassword'),variables('singlequote'),' ',parameters('rhsmUserName'),' ',variables('singlequote'),parameters('rhsmPassword'),variables('singlequote'),' ',parameters('rhelOSLicenseType'),' ', parameters('rhsmPoolEAP'),' ', parameters('rhsmPoolRHEL'))]"
        }
      }
    }
  ],
  "outputs": {
    "vm DNS Name": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))).dnsSettings.fqdn]"
    },
    "appURL": {
      "type": "string",
      "value": "[concat('http://', reference(variables('publicIPAddressName')).dnsSettings.fqdn, ':8080/JBoss-EAP_on_Azure/')]"
    },
    "adminConsole": {
      "type": "string",
      "value": "[concat('http://', reference(variables('publicIPAddressName')).dnsSettings.fqdn, ':9990')]"
    }
  }
}