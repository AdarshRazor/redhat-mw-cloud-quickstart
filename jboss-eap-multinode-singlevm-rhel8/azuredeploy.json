{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Linux VM user account name"
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine."
      }
    },
    "adminPasswordOrSSHKey": {
      "type": "securestring",
        "metadata": {
          "description": "Password or SSH key for the Virtual Machine."
        }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Label for the Public IP. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "jbossEAPUserName": {
      "type": "string",
      "metadata": {
        "description": "User name for JBoss EAP manager"
      }
    },
    "jbossEAPPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for JBoss EAP manager"
      }
    },
    "offer": {	
      "type": "string",	
      "defaultValue": "PAYG",	
      "allowedValues": [	
        "PAYG",		
        "BYOS"
      ],	
      "metadata": {	
        "description": "Type of offer for deploying your Virtual Machine."	
      }	
    },
    "rhsmUserName": {
      "type": "string",
      "metadata": {
        "description": "User name for Red Hat subscription manager"
      }
    },
    "rhsmPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for Red Hat subscription  manager"
      }
    },
    "rhsmPoolEAP": {
      "type": "string",
      "metadata": {
        "description": "Red Hat Subscription Manager Pool ID (Should have EAP entitlement)"
      }
    },
    "rhsmPoolRHEL": {
      "type": "string",
      "metadata": {
        "description": "Red Hat Subscription Manager Pool ID (Should have RHEL entitlement). Mandartory if you select the BYOS offer"
      },
      "defaultValue": ""
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D4_v3",
      "allowedValues": [
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_D2_v3",
        "Standard_D4_v3",
        "Standard_D8_v3",
        "Standard_D16_v3",
        "Standard_D32_v3",
        "Standard_D48_v3",
        "Standard_D64_v3",
        "Standard_D2S_v3",
        "Standard_D4S_v3",
        "Standard_D8S_v3",
        "Standard_D16S_v3",
        "Standard_D32S_v3",
        "Standard_D48S_v3",
        "Standard_D64S_v3",
        "Standard_F1",
        "Standard_F2",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/SpektraSystems/redhat-mw-cloud-quickstart/master/jboss-eap-multinode-singlevm-rhel8/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "singlequote": "'",
    "baseName": "[uniquestring(parameters('dnsLabelPrefix'),resourceGroup().id)]",
    "networkInterfaceName": "[concat('myNic8',variables('baseName'))]",
    "addressPrefixes": "10.0.0.0/24",
    "subnetName": "default",
    "publicIPAddressName": "[concat('myIP8',variables('baseName'))]",
    "publicIPAddressType": "Dynamic",
    "virtualMachineNamePAYG": "[concat('vm-payg-',parameters('dnsLabelPrefix'))]",
    "virtualMachineNameBYOS": "[concat('vm-byos-',parameters('dnsLabelPrefix'))]",
    "virtualNetworkName": "eap-vnet",
    "networkSecurityGroupName": "[concat(parameters('dnsLabelPrefix'),'-nsg8')]",
    "storageAccountType": "Standard_LRS",
    "sActName": "[concat('eap',uniquestring(parameters('dnsLabelPrefix'),resourceGroup().id))]",
    "ScriptFolder": "scripts",
    "ScriptFileName": "eap-setup-redhat.sh",
    "linuxConfiguration": {	
      "disablePasswordAuthentication": true,	
      "ssh": {	
        "publicKeys": [	
          {	
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",	
            "keyData": "[parameters('adminPasswordOrSSHKey')]"	
          }	
        ]	
      }	
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[variables('sActName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {},
      "resources": [
        {
          "name": "[concat('default/', 'eapblobcontainer')]",  
          "type": "blobServices/containers",
          "apiVersion": "2018-07-01",
          "dependsOn": [
            "[variables('sActName')]"
          ],
          "properties": {
            "publicAccess": "Container"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-11-01",
      "name": "[variables('publicIpAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "[variables('publicIpAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-11-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "HTTP",
            "properties": {
              "priority": 300,
              "protocol":"Tcp",
              "access":"Allow",
              "direction":"Inbound",
              "sourceAddressPrefix":"*",
              "sourcePortRange":"*",
              "destinationAddressPrefix": "*",
              "destinationPortRange":"80"
            }
          },
          {
            "name":"HTTPS",
            "properties":{
              "priority":320,
              "protocol":"Tcp",
              "access":"Allow",
              "direction":"Inbound",
              "sourceAddressPrefix":"*",
              "sourcePortRange":"*",
              "destinationAddressPrefix": "*",
              "destinationPortRange":"443"
            }
          },
          {
            "name":"SSH",
            "properties":{
              "priority":340,
              "protocol":"Tcp",
              "access":"Allow",
              "direction":"Inbound",
              "sourceAddressPrefix":"*",
              "sourcePortRange":"*",
              "destinationAddressPrefix": "*",
              "destinationPortRange":"22"
            }
          },
          {
            "name":"RDP",
            "properties":{
              "priority":360,
              "protocol":"Tcp",
              "access":"Allow",
              "direction":"Inbound",
              "sourceAddressPrefix":"*",
              "sourcePortRange":"*",
              "destinationAddressPrefix": "*",
              "destinationPortRange":"3389"
            }
          },
          {
            "name": "EAPADMIN1",
            "properties": {
              "priority":380,
              "protocol":"Tcp",
              "access":"Allow",
              "direction":"Inbound",
              "sourceAddressPrefix":"*",
              "sourcePortRange":"*",
              "destinationAddressPrefix": "*",
              "destinationPortRange":"9990"
            }
          },
          {
            "name": "EAPADMIN2",
            "properties": {
              "priority":400,
              "protocol":"Tcp",
              "access":"Allow",
              "direction":"Inbound",
              "sourceAddressPrefix":"*",
              "sourcePortRange":"*",
              "destinationAddressPrefix": "*",
              "destinationPortRange":"10090"
            }
          },
          {
            "name": "EAPAPP1",
            "properties": {
              "priority":420,
              "protocol":"Tcp",
              "access":"Allow",
              "direction":"Inbound",
              "sourceAddressPrefix":"*",
              "sourcePortRange":"*",
              "destinationAddressPrefix": "*",
              "destinationPortRange":"8080"
            }
          },
          {
            "name": "EAPAPP2",
            "properties": {
              "priority":440,
              "protocol":"Tcp",
              "access":"Allow",
              "direction":"Inbound",
              "sourceAddressPrefix":"*",
              "sourcePortRange":"*",
              "destinationAddressPrefix": "*",
              "destinationPortRange":"8180"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-11-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefixes')]"
          ]
        },
        "subnets": [
          {
            "name":"[variables('subnetName')]", 
            "properties":{
              "addressPrefix":"10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-11-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
              "name": "ipconfig1",
              "properties": {
                  "subnet": {
                      "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                  },
                  "privateIPAllocationMethod": "Dynamic",
                  "publicIpAddress": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpAddressName'))]"
                  }
              }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "condition": "[equals(parameters('Offer'),'PAYG')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-12-01",
      "name": "[variables('virtualMachineNamePAYG')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('sActName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
            }
          },
          "imageReference": {
              "publisher": "RedHat",
              "offer": "RHEL",
              "sku": "8",
              "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('virtualMachineNamePAYG')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrSSHKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        }
      }
    },
    {
      "condition": "[equals(parameters('Offer'),'PAYG')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('virtualMachineNamePAYG'),'/newuserscript')]",
      "apiVersion": "2019-12-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineNamePAYG'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(parameters('_artifactsLocation'), variables('ScriptFolder'), '/', variables('ScriptFileName'), parameters('_artifactsLocationSasToken'))]"
          ],
          "commandToExecute": "[concat('sh eap-setup-redhat.sh',' ',parameters('adminUsername'),' ',parameters('jbossEAPUserName'),' ',variables('singlequote'),parameters('jbossEAPPassword'),variables('singlequote'),' ',parameters('offer'),' ',parameters('rhsmUserName'),' ',variables('singlequote'),parameters('rhsmPassword'),variables('singlequote'),' ', parameters('rhsmPoolEAP'),' ',reference(variables('publicIPAddressName')).dnsSettings.fqdn,' ',reference(concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))).ipConfigurations[0].properties.privateIPAddress,' ',variables('sActName'),' ',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('sActName')), '2019-04-01').keys[0].value, ' ', parameters('rhsmPoolRHEL'))]"
        }
      }
    },
    {
      "condition": "[equals(parameters('Offer'),'BYOS')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-12-01",
      "name": "[variables('virtualMachineNameBYOS')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('sActName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
      ],
      "plan": {
          "name": "rhel-lvm8",
          "publisher": "redhat",
          "product": "rhel-byos"
        },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
            }
          },
          "imageReference": {
              "publisher": "RedHat",
              "offer": "rhel-byos",
              "sku": "rhel-lvm8",
              "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('virtualMachineNameBYOS')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrSSHKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        }
      }
    },
    {
      "condition": "[equals(parameters('Offer'),'BYOS')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('virtualMachineNameBYOS'),'/newuserscript')]",
      "apiVersion": "2019-12-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineNameBYOS'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(parameters('_artifactsLocation'), variables('ScriptFolder'), '/', variables('ScriptFileName'), parameters('_artifactsLocationSasToken'))]"
          ],
          "commandToExecute": "[concat('sh eap-setup-redhat.sh',' ',parameters('adminUsername'),' ',parameters('jbossEAPUserName'),' ',variables('singlequote'),parameters('jbossEAPPassword'),variables('singlequote'),' ',parameters('offer'),' ',parameters('rhsmUserName'),' ',variables('singlequote'),parameters('rhsmPassword'),variables('singlequote'),' ', parameters('rhsmPoolEAP'),' ',reference(variables('publicIPAddressName')).dnsSettings.fqdn,' ',reference(concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))).ipConfigurations[0].properties.privateIPAddress,' ',variables('sActName'),' ',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('sActName')), '2019-04-01').keys[0].value, ' ', parameters('rhsmPoolRHEL'))]"
        }
      }
    }
  ],
  "outputs": {
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
    },
    "AppUI-1": {
      "type": "string",
      "value": "[concat('http://', reference(variables('publicIPAddressName')).dnsSettings.fqdn, ':8080/eap-session-replication/')]"
    },
    "AppUI-2": {
      "type": "string",
      "value": "[concat('http://', reference(variables('publicIPAddressName')).dnsSettings.fqdn, ':8180/eap-session-replication/')]"
    }
  }
}
